
generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id           String   @id @default(cuid())
  status       String
  insights     Json?
  fullText     String?  @db.Text
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  documentType String?  @map("document_type")

  @@map("documents")
}

// --- Template Models for Document Drafting ---

model Template {
  id              String             @id @default(cuid())
  title           String
  fileDescription String?            @map("file_description")
  jurisdiction    String?
  docType         String?            @map("doc_type")
  similarityTags  String[]           @map("similarity_tags")
  bodyMd          String             @db.Text @map("body_md")
  createdAt       DateTime           @default(now()) @map("created_at")
  updatedAt       DateTime           @updatedAt @map("updated_at")
  variables       TemplateVariable[]
  instances       Instance[]         // ✅ ADD: For draft history

  @@map("templates")
}

model TemplateVariable {
  id          String   @id @default(cuid())
  key         String
  label       String
  description String?
  example     String?
  required    Boolean  @default(true)
  type        String   @default("string") // ✅ ADD: Variable data type
  regex       String?  // ✅ ADD: Optional validation regex
  enum        String[] // ✅ ADD: Optional enum values
  template    Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId  String   @map("template_id")
  createdAt   DateTime @default(now()) @map("created_at") // ✅ ADD: Timestamp

  @@map("template_variables")
}

// ✅ ADD: Instance model for draft history
model Instance {
  id          String   @id @default(cuid())
  templateId  String   @map("template_id")
  template    Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  userQuery   String   @default("") @map("user_query")
  answersJson String   @db.Text @map("answers_json")
  draftMd     String   @db.Text @map("draft_md")
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("instances")
}